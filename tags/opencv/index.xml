<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>opencv on</title><link>/tags/opencv/</link><description>Recent content in opencv on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 16 Feb 2021 12:00:00 -0300</lastBuildDate><atom:link href="/tags/opencv/index.xml" rel="self" type="application/rss+xml"/><item><title>Como eu compilo o OpenCV no Linux com um monte de penduricalhos (CuDNN, CUDA, OpenGL, Qt, TrueType, CODECs de Video)</title><link>/posts/opencv/</link><pubDate>Tue, 16 Feb 2021 12:00:00 -0300</pubDate><guid>/posts/opencv/</guid><description>OpenCV é uma biblioteca gigante. Mas ao mesmo tempo bastante flexível. Você escolhe o que a sua versão vai ter através da instalação ou não no seu sistema de dependências opcionais.
Neste artigo vou mostrar como eu faço para compilar o OpenCV com a maior linha de comando de cmake que já escrevi. Vou também adicionar comentários para que você entenda o que é necessário para compilar com sucesso.
Vamos começar.</description></item><item><title>OpenCV instalado globalmente com autocomplete no PyCharm</title><link>/posts/opencv-autocomplete-pycharm/</link><pubDate>Mon, 28 Dec 2020 12:00:00 -0300</pubDate><guid>/posts/opencv-autocomplete-pycharm/</guid><description>Intro Por um bom tempo utilizei o módulo virtualenv. Mas desde que aprendi sobre o módulo padrão de python venv nunca mais voltei.
Pra começar ele já vem instalado com o python (se não veio, basta instalar o pacote python3-venv). Ele também é mais previsível do que o virtualenv, já que não é necessário mexer nos seus arquivos de login .{bash/zsh/fish}rc e o uso padrão é instalá-lo na raíz do seu projeto.</description></item></channel></rss>